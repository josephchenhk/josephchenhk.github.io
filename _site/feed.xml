<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-05-28T18:58:09+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Joseph Chen</title><subtitle>A blog about Joseph</subtitle><entry><title type="html">Stationary Time Series Tests</title><link href="http://localhost:4000/stationary_time_series_test/" rel="alternate" type="text/html" title="Stationary Time Series Tests" /><published>2021-05-28T09:55:00+08:00</published><updated>2021-05-28T09:55:00+08:00</updated><id>http://localhost:4000/stationary_time_series_test</id><content type="html" xml:base="http://localhost:4000/stationary_time_series_test/">&lt;head&gt;
    &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/x-mathjax-config&quot;&gt;
        MathJax.Hub.Config({
            tex2jax: {
            skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'],
            inlineMath: [['$','$']]
            }
        });
    &lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;In the previous &lt;a href=&quot;https://josephchenhk.github.io/sample-mean-and-variance/&quot;&gt;post&lt;/a&gt;, we investigated the population mean and variance, and the sample mean and variance. We also understand what is an unbiased estimator of the population variance. Now we are going to look for ways to test for mean reversion on time series using the Python programming language, which will give us the basic toolbox to deal with cointegration in future posts.&lt;/p&gt;

&lt;h1 id=&quot;mean-reversion-process&quot;&gt;Mean Reversion Process&lt;/h1&gt;
&lt;p&gt;Mathematically, a continuous mean-reverting time series can be represented by an Ornstein-Uhlenbeck stochastic differential equation in the following form:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} \label{ou-eq}
dx_t = \theta(\mu - x_t)dt + \sigma dW_t
\end{equation}&lt;/script&gt;

&lt;p&gt;Where $\theta$ is the rate of reversion to the mean, $\mu$ is the mean value of the process, $\sigma$ is the standard deviation (and $\sigma^2$ is the variance) of the process and, finally, $W_t$ is a Wiener process. The given equation implies that the change of the time series in the next period is proportional to the difference between the mean and the current value, with the addition of Gaussian noise.&lt;/p&gt;

&lt;p&gt;In discrete form, this OU equation is given as (just let $\Delta t=1$, and change differentiaon to $\Delta$)&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} 
\Delta x_t = \theta(\mu - x_{t-1}) + \sigma \Delta W_t
\end{equation}&lt;/script&gt;

&lt;p&gt;where $\Delta x_t = x_t - x_{t-1}$.&lt;/p&gt;
&lt;h1 id=&quot;augmented-dickey-fuller-test&quot;&gt;Augmented Dickey-Fuller Test&lt;/h1&gt;
&lt;p&gt;The Augmented Dickey-Fuller test provides a quick check and confirmatory evidence that your time series is stationary or non-stationary. We should take into account that is a statistical test, and as such it can only be used to inform the degree to which a null hypothesis can be accepted or rejected. So the given result must be interpreted to be meaningful.&lt;/p&gt;

&lt;p&gt;The ADF test is based on the simple observation that if the value level is higher than the mean, the next move will be downward while if the value is lower than the mean, the next move will be upward.&lt;/p&gt;

&lt;p&gt;We can describe the value changes with the following linear model:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} 
\Delta x_t = \lambda x_{t-1} + \mu + \beta t + \alpha_1 \Delta x_{t-1} + ... + \alpha_k \Delta x_{t-k}  + \epsilon_t
\end{equation}&lt;/script&gt;

&lt;p&gt;where $\Delta x(t) = x(t) - x(t-1)$, $\Delta x(t-1) = x(t-1) - x(t-2)$ and so on.&lt;/p&gt;

&lt;p&gt;The function of the ADF is to test if $\lambda = 0$. &lt;strong&gt;If the hypothesis $\lambda = 0$ can be rejected&lt;/strong&gt;, that means the next move $\Delta x(t)$ depends on the current level $x(t-1)$ and so &lt;strong&gt;it is not a random walk&lt;/strong&gt;. The test statistic is the regression coeficient $\lambda$ divided by the standard error of the regression fit:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} 
DF = \frac{\lambda }{SE(\lambda)}
\end{equation}&lt;/script&gt;

&lt;p&gt;Dickey and Fuller have already calculated the distribution of this test statistic, which allows us to determine the rejection of the hypothesis for any chosen percentage critical value. Since we expect mean regression to be negative (i.e., $\lambda$ is expected to be negative here if this is a mean-reverting time series) and it has to be more negative than the critical value for the hypothesis to be rejected.&lt;/p&gt;

&lt;p&gt;We can simply interpret the result using the p-value from the test. A p-value below a specified threshold (we are going to use 5%) suggests we reject the null hypothesis (stationary), otherwise a p-value above the threshold suggests we accept the null hypothesis (non-stationary).&lt;/p&gt;

&lt;p&gt;A naive implementation of the ADF test in Python is shown here:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import numpy as np
from statsmodels.regression.linear_model import OLS
from statsmodels.tsa.tsatools import lagmat, add_trend
from statsmodels.tsa.adfvalues import mackinnonp

def adf(ts, maxlag:int=None):
    &quot;&quot;&quot;
    Augmented Dickey-Fuller unit root test

    tsdall[explanatory variable] (maxlag=3 as an example)
    * 1st column(tsdall[:,0]): [x3, x4, ..., x_{t-2}, x_{t-1}] are X variables (corresponding to coefficient *lambda*)
    * 2nd column(tsdall[:,1]): [x3-x2, x4-x3, ..., x_{t-2}-x_{t-3}, x_{t-1}-x_{t-2}] are X variables (corresponding to coeff *alpha_1*)
    * 3rd column(tsdall[:,2]): [x2-x1, x3-x2, ..., x_{t-3}-x_{t-4}, x_{t-2}-x_{t-3}] are X variables (corresponding to coeff *alpha_2*)
    * 4th column(tsdall[:,3]): [x1-x0, x2-x1, ..., x_{t-4}-x_{t-3}, x_{t-3}-x_{t-4}] are X variables (corresponding to coeff *alpha_3*)

    tsdshort[response variable]:
    * [x4-x3, x5-x4, ..., x_{t-1}-x_{t-2}, x_t-x_{t-1}] are the Y variables

    Regression:
    * x4-x3 = lambda*x3 + alpha1*(x3-x2) + alpha2*(x2-x1) + alpha3*(x1-x0) + mu + epsilon
    * x5-x4 = lambda*x4 + alpha1*(x4-x3) + alpha2*(x3-x2) + alpha3*(x2-x1) + mu + epsilon
    * ...
    * x_t-x_{t-1} = lambda*x_{t-1} + alpha1*(x_{t-1}-x_{t-2}) + alpha2*(x_{t-2}-x_{t-3}) + alpha3*(x_{t-3}-x_{t-4}) + mu + epsilon
    &quot;&quot;&quot;
    # Maximum lag which is included in test, default 12*(nobs/100)^{1/4} 
    # Ref: https://www.statsmodels.org/stable/generated/statsmodels.tsa.stattools.adfuller.html
    if maxlag is None:
        maxlag = int(np.ceil(12 * (len(ts) / 100) ** (1 / 4)))

    # make sure we are working with an array, convert if necessary
    ts = np.asarray(ts)

    # Calculate the discrete difference
    tsdiff = np.diff(ts)

    # Create a 2d array of lags, trim invalid observations on both sides
    tsdall = lagmat(tsdiff[:, None], maxlag, trim='both', original='in')

    # Get dimension of the array
    nobs = tsdall.shape[0]

    # [explanatory variable] replace first column ([:,0]) xdiff with level of x
    tsdall[:, 0] = ts[-nobs - 1:-1]

    # [response variable]
    tsdshort = tsdiff[-nobs:]

    # Calculate the linear regression using an ordinary least squares model
    results = OLS(tsdshort, add_trend(tsdall[:, :maxlag + 1], 'c')).fit()

    # adfstat = DF = lambda / SE(lambda)
    adfstat = results.tvalues[0]

    # Get approx p-value from a precomputed table (from stattools)
    pvalue = mackinnonp(adfstat, 'c', N=1)

    return adfstat, pvalue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>joseph</name></author><category term="blog" /><category term="systematic trading" /><category term="statistics" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/markdown.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Sample Mean and Variance</title><link href="http://localhost:4000/sample-mean-and-variance/" rel="alternate" type="text/html" title="Sample Mean and Variance" /><published>2021-05-26T09:52:38+08:00</published><updated>2021-05-26T09:52:38+08:00</updated><id>http://localhost:4000/sample-mean-and-variance</id><content type="html" xml:base="http://localhost:4000/sample-mean-and-variance/">&lt;head&gt;
    &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/x-mathjax-config&quot;&gt;
        MathJax.Hub.Config({
            tex2jax: {
            skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'],
            inlineMath: [['$','$']]
            }
        });
    &lt;/script&gt;
&lt;/head&gt;

&lt;h1 id=&quot;population&quot;&gt;Population&lt;/h1&gt;

&lt;p&gt;Suppose $\vec{X} $ is our population with $N$ elements:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vec{X} = (X_1, X_2, X_3, ..., X_N)&lt;/script&gt;

&lt;p&gt;According to the definition of mean and variance, we can have:&lt;/p&gt;

&lt;p&gt;(1). population mean:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} \label{eq-pop-mean}
\mu = \textbf{E}(\vec{X}) = \frac{1}{N} \sum_{i=1}^{N}X_i
\end{equation}&lt;/script&gt;

&lt;p&gt;(2). population variance (thus standard deviation $\sigma$ is the square root of variance):&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} \label{eq-pop-var}
\sigma^2 = \textbf{Var}(\vec{X}) = \frac{1}{N} \sum_{i=1}^{N} \left( X_i-\mu \right)^2
\end{equation}&lt;/script&gt;

&lt;p&gt;From the definitions above, we have the following conclusion: the variance equals &lt;strong&gt;mean of square minus square of mean&lt;/strong&gt; (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Variance&quot;&gt;variance&lt;/a&gt;):&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation*} 
\textbf{Var}(\vec{X})  = \textbf{E}(\vec{X}^2) - \left[\textbf{E}(\vec{X})  \right]^2
\end{equation*}&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align*} 
\textbf{Var}(\vec{X})  &amp;= \frac{1}{N} \sum_{i=1}^{N} \left( X_i-\mu \right)^2 \\
                                                &amp;= \frac{1}{N} \sum_{i=1}^{N} \left( X_i^2-2\cdot\mu\cdot X_i+\mu^2 \right) \\
																								&amp;= \frac{1}{N} \sum_{i=1}^{N} X_i^2-2\cdot\mu\cdot \frac{1}{N} \sum_{i=1}^{N}X_i+\frac{1}{N} \sum_{i=1}^{N}\mu^2  \\
																								&amp;= \frac{1}{N} \sum_{i=1}^{N} X_i^2-2\cdot\mu\cdot \mu+\mu^2  \\
																								&amp;= \frac{1}{N} \sum_{i=1}^{N} X_i^2-\mu^2  \\
																								&amp;= \textbf{E}(\vec{X}^2)-\left[\textbf{E}(\vec{X})  \right]^2  \\
\end{align*} %]]&gt;&lt;/script&gt;

&lt;p&gt;Q.E.D&lt;/p&gt;
&lt;h1 id=&quot;sample&quot;&gt;Sample&lt;/h1&gt;
&lt;p&gt;We can randomly take out some samples from our population. If we fix the sample size to be $n$ (where $n&amp;lt;=N$), then there will be $C_N^n = \frac{N!}{n!\cdot(N-n)!}$ distinct samples from our population $\vec{X}$.&lt;/p&gt;

&lt;p&gt;As a brief example, let’s say $N=4$, and $n=3$, then for a population $\vec{X} $:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vec{X} = (X_1, X_2, X_3, X_4)&lt;/script&gt;

&lt;p&gt;we can take out &lt;em&gt;four&lt;/em&gt; distinct samples ($C_4^3 = 4$) as below (the probability of each is equal to $1/4$):&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;(X_1, X_2, X_3), (X_1, X_2, X_4), (X_1, X_3, X_4), (X_2, X_3, X_4)&lt;/script&gt;

&lt;p&gt;And for each sample, we are able to calculate the mean of the sample (just the same as population mean while treating the sample as a new population):&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align*} 
\bar{X}_{sm,1} &amp;= \frac{X_1 + X_2 + X_3} {3} \\ 
\bar{X}_{sm,2} &amp;= \frac{X_1 + X_2 + X_4} {3} \\
\bar{X}_{sm,3} &amp;= \frac{X_1 + X_3 + X_4} {3} \\
\bar{X}_{sm,4} &amp;= \frac{X_2 + X_3 + X_4} {3} 
\end{align*} %]]&gt;&lt;/script&gt;

&lt;p&gt;where $sm$ stands for &lt;em&gt;sample mean&lt;/em&gt;. For this &lt;strong&gt;distribution of sample mean&lt;/strong&gt;  &lt;script type=&quot;math/tex&quot;&gt;\vec{X}_{sm} = (\bar{X}_{sm,1} ,\bar{X}_{sm,2} ,\bar{X}_{sm,3} ,\bar{X}_{sm,4} )&lt;/script&gt;,   we can calculate its mean and variance:&lt;/p&gt;

&lt;p&gt;(3). mean of sample mean:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} \label{eq-samplemean-mean}
\mu_{sm} = \textbf{E}(\vec{X}_{sm} ) = \frac{1}{4} \sum_{i=1}^{4} \bar{X}_{sm,i} 
\end{equation}&lt;/script&gt;

&lt;p&gt;(4). variance of sample mean:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} \label{eq-samplemean-var}
\sigma_{sm}^2 = \textbf{Var}(\vec{X}_{sm} ) = \frac{1}{4} \sum_{i=1}^{4} \left( \bar{X}_{sm,i} -\mu_{sm} \right)^2
\end{equation}&lt;/script&gt;

&lt;p&gt;For the relations of the original population and the sample mean, we have the following two assertations:&lt;/p&gt;

&lt;p&gt;(5). &lt;span style=&quot;color:red&quot;&gt;&lt;em&gt;mean of sample mean = population mean&lt;/em&gt; &lt;/span&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} 
\mu_{sm} = \textbf{E}(\vec{X}_{sm} ) \color{blue}{=\textbf{E}(\vec{X})  = \mu}
\end{equation}&lt;/script&gt;

&lt;p&gt;(6). &lt;span style=&quot;color:red&quot;&gt;&lt;em&gt;variance of sample mean = population variance / sample size&lt;/em&gt; &lt;/span&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} 
\sigma_{sm}^2 = \textbf{Var}(\vec{X}_{sm} ) \color{blue}{= \frac{\textbf{Var}(\vec{X}) }{n}=\frac{\sigma^2}{n} }
\end{equation}&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align*} 
\mu_{sm} &amp;= \textbf{E}(\vec{X}_{sm} )   \\
                     &amp;= \frac{1}{4} \sum_{i=1}^{4} \bar{X}_{sm,i}  \\
										 &amp;= \frac{1}{4} \left[ \frac{X_1 + X_2 + X_3} {3}  + \frac{X_1 + X_2 + X_4} {3} +  \frac{X_1 + X_3 + X_4} {3}  + \frac{X_2 + X_3 + X_4} {3}  \right] \\ 
										 &amp; = \frac{1}{4} \left( \frac{\color{green}{3}\cdot X_1 + \color{green}{3} \cdot X_2 + \color{green}{3}\cdot X_3 + \color{green}{3}\cdot X_4} {3}   \right)    [\color{green}{\text{each element appears } C_{N-1}^{n-1}=C_3^2=3 \text{ times in the samples}}]\\
										 &amp; = \frac{1}{\color{green}{C_N^n}} \left( \sum_{i=1}^{N}\frac{\color{green}{C_{N-1}^{n-1}}\cdot X_i} {\color{green}{n}}   \right) [\color{green}{\text{generalize to population size=N and sample size=n}}]\\
										 &amp; = \frac{C_{N-1}^{n-1}}{C_N^n\cdot n}\sum_{i=1}^{N}X_i \\
										 &amp;= \frac{1}{N}\sum_{i=1}^{N}X_i  [\color{green}{\text{when N=4, it is }\frac{1}{4} \left(  X_1  + X_2 + X_3 + X_4\right)} ]\\
                     &amp;=\color{blue}{ \textbf{E}(\vec{X})  = \mu}
\end{align*} %]]&gt;&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align*} 
\sigma_{sm}^2 &amp;= \textbf{Var}(\vec{X}_{sm} )  \\
                     &amp;= \frac{1}{4} \sum_{i=1}^{4} \left( \bar{X}_{sm,i} -\mu_{sm} \right)^2 \\
										 &amp;= \frac{1}{4} \sum_{i=1}^{4} \left( \bar{X}_{sm,i} -\mu \right)^2  [\color{green}{\text{as we have demonstrated } \mu_{sm} =\mu}]\\
										 &amp;= \frac{1}{4} \left[ \left( \frac{X_1 + X_2 + X_3} {3} -\mu\right)^2 + 
										                                            \left( \frac{X_1 + X_2 + X_4} {3} -\mu\right)^2 +
																																\left( \frac{X_1 + X_3 + X_4} {3} -\mu\right)^2 +
																																\left( \frac{X_2 + X_3 + X_4} {3} -\mu\right)^2  \right]  \\
										&amp;= \frac{1}{4} \left[ \left( \frac{(X_1-\mu) +(X_2-\mu) + (X_3-\mu)} {3} \right)^2 + 
										                                            \left( \frac{(X_1-\mu) +(X_2-\mu) + (X_4-\mu)} {3} \right)^2 +
																																\left( \frac{(X_1-\mu) +(X_3-\mu) + (X_4-\mu)} {3} \right)^2 +
																																\left( \frac{(X_2-\mu) +(X_3-\mu) + (X_4-\mu)} {3} \right)^2  \right]  \\
										&amp;= \frac{1}{4} \left[ \left( \frac{\color{green}{3}\cdot(X_1-\mu)^2 +
																																												\color{green}{3}\cdot(X_2-\mu)^2 + 
																																												\color{green}{3}\cdot(X_3-\mu)^2 + 
																																												\color{green}{3}\cdot(X_4-\mu)^2 \color{red}{+0}} {3^ 2} \right)  \right] 
																															 [\color{green}{\text{each element appears } C_{N-1}^{n-1}=C_3^2=3 \text{ times in the samples}}, 
																															 \color{red}{\text{assuming all $X_i$ are uncorrelated, so cross terms are neligible}}]\\
										&amp; = \frac{1}{\color{green}{C_N^n}} \left( \sum_{i=1}^{N}\frac{\color{green}{C_{N-1}^{n-1}}\cdot(X_i-\mu)^2} {\color{green}{n^2}}   \right)
										                                          [\color{green}{\text{generalize to population size=N and sample size=n}}]\\
										&amp; = \frac{C_{N-1}^{n-1}}{C_N^n\cdot n^2}\sum_{i=1}^{N}(X_i-\mu)^2 \\
										&amp; = \frac{1}{n}\cdot\frac{1}{N}\sum_{i=1}^{N}(X_i-\mu)^2 \\
										&amp;=\frac{1}{n}\cdot \textbf{Var}(\vec{X})  \\
										&amp;=\color{blue}{\frac{\textbf{Var}(\vec{X}) }{n}=\frac{\sigma^2}{n} }
\end{align*} %]]&gt;&lt;/script&gt;

&lt;p&gt;Q.E.D&lt;/p&gt;

&lt;h1 id=&quot;variance-of-a-sum-equals-the-sum-of-the-variances&quot;&gt;Variance of a sum equals the sum of the variances?&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: in the proof above, we have used the conclusion that &lt;strong&gt;the variance of  a sum equals the sum of the variances&lt;/strong&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation*}
\textbf{Var} \left(  \sum_{i=1}^{N}X_i \right)=  \sum_{i=1}^{N} \textbf{Var} (X_i) \color{red}{?}
\end{equation*}&lt;/script&gt;

&lt;p&gt;This conclusion is &lt;em&gt;NOT true&lt;/em&gt;  in general. There is a &lt;a href=&quot;https://stats.stackexchange.com/questions/31177/does-the-variance-of-a-sum-equal-the-sum-of-the-variances&quot;&gt;post&lt;/a&gt; that explains this issue. To summarise, starting from the calculation of variance as discussed above: $\textbf{Var}(\vec{X})  = \textbf{E}(\vec{X}^2) - \left[\textbf{E}(\vec{X})  \right]^2$, we can show that&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align*}
\textbf{Var} \left(  \sum_{i=1}^{N}X_i \right) &amp;= \textbf{E} \left(  \left[ \sum_{i=1}^{N}X_i \right]^2\right) - \left[ \textbf{E} \left(  \sum_{i=1}^{N}X_i \right)  \right]^2 \\
                                                                                                  &amp;=\textbf{E} \left(   \sum_{i=1}^{N}\sum_{j=1}^{N}X_i\cdot X_j\right) - \sum_{i=1}^{N}\sum_{j=1}^{N}\textbf{E} (X_i)\cdot \textbf{E} (X_j) \\
																																																	&amp;=\sum_{i=1}^{N}\sum_{j=1}^{N}\textbf{E} \left(   X_i\cdot X_j\right) - \sum_{i=1}^{N}\sum_{j=1}^{N}\textbf{E} (X_i)\cdot \textbf{E} (X_j) \\
																																																	&amp;=\sum_{i=1}^{N}\sum_{j=1}^{N}\left(\textbf{E} \left(   X_i\cdot X_j\right) - \textbf{E} (X_i)\cdot \textbf{E} (X_j) \right)\\
																																																	&amp;=\sum_{i=1}^{N}\sum_{j=1}^{N}\textbf{Cov}(X_i, X_j)\\
\end{align*} %]]&gt;&lt;/script&gt;

&lt;p&gt;Therefore,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;if the variables are uncorrelated&lt;/strong&gt;, that is, $\textbf{Cov}(X_i, X_j)=0$ for $i\neq j$, then&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation*}
\textbf{Var} \left(  \sum_{i=1}^{N}X_i \right)  =\sum_{i=1}^{N}\sum_{j=1}^{N}\textbf{Cov}(X_i, X_j) = \sum_{i=1}^{N}\textbf{Cov}(X_i, X_i) = \sum_{i=1}^{N}\textbf{Var}(X_i)
\end{equation*}&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;but if the variables are correlated&lt;/strong&gt;, this relation fails in general: for example, suppose $X_1$, $X_2$ are two random variables each with variance $\sigma^2$ and $\textbf{Cov}(X_1,X_2)=\rho$ where $0&amp;lt;\rho&amp;lt;\sigma^2$. Then $\textbf{Var}(X_1 + X_2) = 2\cdot(\sigma^2 + \rho) \neq 2\cdot \sigma^2$, so the identity fails.&lt;/p&gt;
&lt;h1 id=&quot;unbiased-estimator-for-population-variance&quot;&gt;Unbiased estimator for population variance&lt;/h1&gt;
&lt;p&gt;When computing variance from a sample, we use&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation*} 
s^2 = \frac{1}{\color{blue}{n-1}} \sum_{i=1}^{n} \left( X_{sm},i-\mu_{sm} \right)^2
\end{equation*}&lt;/script&gt;

&lt;p&gt;as an&lt;em&gt;unbiased estimator for the population variance&lt;/em&gt; , which means, $\textbf{E}(s^2)=\sigma^2$. Why do we use $n-1$ instead of $n$ here? It is an issue related to &lt;a href=&quot;https://en.wikipedia.org/wiki/Bessel%27s_correction&quot;&gt;Bessel’s correction&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To explain this, let’s take $\textbf{E}(\vec{X}^2) =\textbf{Var}(\vec{X})  + \left[\textbf{E}(\vec{X})  \right]^2$ as assumed knowledge, and assume that variance of a sum equals the sum of the variances (i.e., variables are uncorrelated).&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align*} 
\textbf{E}\left( \sum_{i=1}^{n} \left( X_{sm,i}-\mu_{sm} \right)^2 \right) 
									&amp;= \textbf{E}\left( \sum_{i=1}^{n}X_{sm,i}^2 - 2\cdot \mu_{sm}\cdot\sum_{i=1}^{n} X_{sm,i} + n\cdot\mu_{sm}^2 \right) \\
									&amp;= \textbf{E}\left( \sum_{i=1}^{n}X_{sm,i}^2 - n\cdot\mu_{sm}^2 \right)  
									[\color{green}{\sum_{i=1}^{n} X_{sm,i}=n\cdot \mu_{sm}}]\\
									&amp;=n\cdot\textbf{E}(X_{sm,i}^2) - n\cdot\textbf{E}(\mu_{sm}^2) \\
									&amp;=n\cdot\left[ \textbf{Var}(X_{sm,i}) + \left(\textbf{E}(X_{sm,i})\right)^2 \right]- n\cdot\left[ \textbf{Var}(\mu_{sm}) + \left(\textbf{E}(\mu_{sm})\right)^2 \right]
									[\color{green}{\textbf{E}(\vec{X}^2) =\textbf{Var}(\vec{X})  + \left[\textbf{E}(\vec{X})  \right]^2}] \\
									&amp;=n\cdot\left(\sigma^2 + \mu_{sm}^2\right) - n\cdot\left(\frac{\sigma^2}{n} + \mu_{sm}^2\right) 
									[\color{green}{\textbf{E}(X_{sm,i})=\mu_{sm}=\textbf{E}(\mu_{sm}); \text{ and } \textbf{Var}(\mu_{sm})=\textbf{Var}(X_{sm,i})/n=\sigma^2/n} \color{red}{ \text{ if we assume variables $X$ are uncorrelated as disscussed above}} ] \\
									&amp;=(n-1)\cdot\sigma^2\\
\end{align*} %]]&gt;&lt;/script&gt;

&lt;p&gt;Therefore we have:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation*} 
\textbf{E}\left( \frac{1}{\color{blue}{n-1}}\sum_{i=1}^{n} \left( X_{sm,i}-\mu_{sm} \right)^2 \right) = \sigma^2
\end{equation*}&lt;/script&gt;</content><author><name>joseph</name></author><category term="blog" /><category term="systematic trading" /><category term="statistics" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/markdown.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Ernest P. Chan: Winning Strategies and Their Rationale (3)</title><link href="http://localhost:4000/ernest-p-chan-winning-strategies-and-their-rationale-3/" rel="alternate" type="text/html" title="Ernest P. Chan: Winning Strategies and Their Rationale (3)" /><published>2021-04-01T09:52:38+08:00</published><updated>2021-04-01T09:52:38+08:00</updated><id>http://localhost:4000/ernest-p-chan-winning-strategies-and-their-rationale-3</id><content type="html" xml:base="http://localhost:4000/ernest-p-chan-winning-strategies-and-their-rationale-3/">&lt;head&gt;
    &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/x-mathjax-config&quot;&gt;
        MathJax.Hub.Config({
            tex2jax: {
            skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'],
            inlineMath: [['$','$']]
            }
        });
    &lt;/script&gt;
&lt;/head&gt;

&lt;h1 id=&quot;tests-for-time-series-momentum&quot;&gt;Tests for Time Series Momentum&lt;/h1&gt;

&lt;p&gt;计算时间序列的correlation，首先需要&lt;strong&gt;选取一个time lag&lt;/strong&gt;，站在某个时间点上，我们总会有两个return：过去一段时间(-N)的return，和未来一段时间(+M)的return，我们需要计算在时间序列上两者的相关系数：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Corr(R(-N, t), R(+M, t)) = \rho(R(-N, t), R(+M, t))&lt;/script&gt;

&lt;p&gt;尽可能尝试不同的(N,M)组合，去找出最optimal（相关系数最大）的look-back period (N) 和holding period (M).&lt;/p&gt;

&lt;p&gt;计算时，需要注意要么look-back period不能重叠，要么holding period不能重叠，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images_in_posts/overlap_lookback_holding.png&quot; alt=&quot;Markdown Image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;variance-ratio-test&quot;&gt;Variance Ratio test&lt;/h1&gt;
&lt;p&gt;“variance-ratio test”又称作 “F-ratio test” 或者F-test.  F-test 主要表征两个分布的方差的比例&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F = \frac{s_1^2}{s_2^2}&lt;/script&gt;

&lt;p&gt;其中，$s_1^2=\frac{\sum(x_1-\bar{x}_1)^2}{n_1-1}$， $s_2^2=\frac{\sum(x_2-\bar{x}_2)^2}{n_2-1}$&lt;/p&gt;

&lt;p&gt;Variance-ratio test由Cochrane（1988）年发展，主要用于检测时间序列是否具备均值回归（mean-reverting）的特性。其原理为：若价格时间序列遵从
随机漫步过程，则任意K期的资产回报率的方差（Variance）与时间间隔K成正比。&lt;/p&gt;</content><author><name>joseph</name></author><category term="blog" /><category term="算法交易" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/markdown.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">CentOS 7 远程连接GUI界面</title><link href="http://localhost:4000/centos-7-remote-connect-gui/" rel="alternate" type="text/html" title="CentOS 7 远程连接GUI界面" /><published>2021-03-30T17:15:18+08:00</published><updated>2021-03-30T17:15:18+08:00</updated><id>http://localhost:4000/centos-7-remote-connect-gui</id><content type="html" xml:base="http://localhost:4000/centos-7-remote-connect-gui/">&lt;h1 id=&quot;安装vnc-server&quot;&gt;安装vnc-server&lt;/h1&gt;
&lt;p&gt;有了桌面环境，一般可以通过云服务器厂商提供的web终端远程连接进入桌面。用web终端每次都需要打开浏览器，然后登陆云管理后台再连接，比较麻烦。我们采取直接从桌面客户端远程连接的方式，省去打开浏览器和登录云管理后台的操作。&lt;/p&gt;

&lt;p&gt;远程桌面技术有多种，例如VNC, TeamViewer, RDP等，本文使用免费且广泛使用的VNC。&lt;/p&gt;

&lt;p&gt;在服务器上先安装服务端(tigervnc是tightvnc的分支)：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; tigervnc-server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;接着复制一份VNC配置：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;注意上述命令参数重的“@:1”，可以将数字1换成30000内的任意数字，“5900+数字”即为程序的显示（监听）端口，如”@:1”表示监听5901端口。&lt;/p&gt;

&lt;p&gt;编辑该配置文件(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system/vncserver@:1.service&lt;/code&gt;)，将文件内的&lt;USER&gt;替换成远程连接时的登录用户名（如果是root，注意将第二个&lt;USER&gt;所在行的&quot;/home&quot;移除掉）。配置示例：&lt;/USER&gt;&lt;/USER&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Remote desktop service &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VNC&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;syslog.target network.target

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;simple

&lt;span class=&quot;c&quot;&gt;# Clean any existing files in /tmp/.X11-unix environment&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ExecStartPre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/bin/sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/usr/bin/vncserver -kill %i &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 || :'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/vncserver_wrapper &amp;lt;USER&amp;gt; %i
&lt;span class=&quot;nv&quot;&gt;ExecStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/bin/sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/usr/bin/vncserver -kill %i &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 || :'&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;接下来设置vnc连接密码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; vncpasswd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;注意连接密码与登录密码不同：连接密码用于显示远程桌面，登录密码用于用户登录系统。&lt;/p&gt;

&lt;p&gt;设置好后，启动vnc服务：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; systemctl daemon-reload
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; systemctl start vncserver@:1
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;vncserver@:1
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果开启了防火墙，注意放行相应端口（阿里云的话在安全管理控制组进行设置）。&lt;/p&gt;

&lt;h1 id=&quot;客户端连接&quot;&gt;客户端连接&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;服务端配置完毕，接下来用客户端连接。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;vnc是免费技术，许多客户端都支持该协议。本文采用App Store上免费的“Remote Desktop - VNC”软件进行连接。&lt;/p&gt;

&lt;p&gt;在输入框填写服务器地址：&lt;strong&gt;ip:port&lt;/strong&gt;，其中ip是服务器的ip或域名，port是监听的端口，例如&lt;strong&gt;5901&lt;/strong&gt;。输入后按回车，弹出密码输入框，输入vncpasswd设置的密码。密码正确的话就可以看到服务器的图形桌面。&lt;/p&gt;</content><author><name>joseph</name></author><category term="blog" /><category term="vncserver" /><summary type="html">安装vnc-server 有了桌面环境，一般可以通过云服务器厂商提供的web终端远程连接进入桌面。用web终端每次都需要打开浏览器，然后登陆云管理后台再连接，比较麻烦。我们采取直接从桌面客户端远程连接的方式，省去打开浏览器和登录云管理后台的操作。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/markdown.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Ernest P. Chan: Winning Strategies and Their Rationale (1)</title><link href="http://localhost:4000/ernest-p-chan-winning-strategies-and-their-rationale-1/" rel="alternate" type="text/html" title="Ernest P. Chan: Winning Strategies and Their Rationale (1)" /><published>2021-02-08T16:26:00+08:00</published><updated>2021-02-08T16:26:00+08:00</updated><id>http://localhost:4000/ernest-p-chan-winning-strategies-and-their-rationale-1</id><content type="html" xml:base="http://localhost:4000/ernest-p-chan-winning-strategies-and-their-rationale-1/">&lt;p&gt;A brief note of Ernest Chan’s book.&lt;/p&gt;

&lt;h1 id=&quot;backtesting-and-automated-execution&quot;&gt;Backtesting and Automated Execution&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;backtest要做对，否则不如不做&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;好的回测平台 (backtesting platform)，应该与好的自动化执行平台 (automated execution platform)相一致 (容易从回测过渡至实盘交易)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-importance-of-backtesting&quot;&gt;The Importance of Backtesting&lt;/h2&gt;

&lt;p&gt;为什么别人的策略，到你这就很难重复 (backtest a published strategy)?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;别人的细节不会告诉你，只有自己亲自backtest一遍，踩了所有的坑，才算pick up了别人的strategy&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;自己实现backtesting，能够让你将别人的策略，跑在真正的out-of-sample的数据集上；如果不work，你很可能可以判断这是一篇水文&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;自己实现backtesting，也是一个改进策略 (refine and improve the strategy)的过程&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;common-pitfalls-of-backtesting&quot;&gt;Common Pitfalls of Backtesting&lt;/h2&gt;

&lt;h3 id=&quot;look-ahead-bias&quot;&gt;Look-ahead Bias&lt;/h3&gt;

&lt;p&gt;任何时候，一个正确的backtesting，都不应该用到未来的数据&lt;/p&gt;

&lt;h3 id=&quot;data-snooping-bias-and-the-beauty-of-linearity&quot;&gt;Data-Snooping Bias and the Beauty of Linearity&lt;/h3&gt;

&lt;p&gt;Data-snooping：用太多参数去过拟合历史数据。怎么解决？&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;严格执行out-of-sample一票否决权（另一种不那么好的方法是：进行cross validation）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;尽可能减少参数（parameter）。【注意】如果你的策略参数不多，但有很复杂的交易规则，也可能导致data-snooping&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;linear-model-or-nonlinear-model&quot;&gt;Linear Model or Nonlinear Model&lt;/h3&gt;

&lt;p&gt;不要迷信非线性模型，很多时候简单的线性模型，反而更好&lt;/p&gt;

&lt;h3 id=&quot;stock-splits-and-dividend-adjustments&quot;&gt;Stock Splits and Dividend Adjustments&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;拆股N-to-1，股票价格会被稀释N倍：回测时将除权日前的价格除以N（在实盘时也要做类似的处理）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;派息每股¥d，股票价格会降低¥d：回测时将除权日前的价格减去¥d（在实盘时也要做类似的处理）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;自己做一次前复权/后复权&lt;/p&gt;

&lt;h3 id=&quot;survivorship-bias-in-stock-database&quot;&gt;Survivorship Bias in Stock Database&lt;/h3&gt;

&lt;p&gt;如果回测的数据里，不包括除牌（delisted）的公司，就存在survivorship bias了。对于mean-reverting long-only的策略而言，这种幸存者偏差的影响尤其重要；对momentum策略而言，影响相对没那么大。&lt;/p&gt;

&lt;p&gt;mean-reverting策略更依赖长期的数据，filter掉退市的股票，变相等于避免了一部分可能不盈利的策略，从而导致回测结果inflated；momentum策略更依赖短期的数据，filter掉退市的股票，变相等于放弃了一部分可能短期内盈利的股票，从而导致回测结果deflated。&lt;/p&gt;

&lt;h3 id=&quot;primary-versus-consolidated-stock-prices&quot;&gt;Primary versus Consolidated Stock Prices&lt;/h3&gt;

&lt;p&gt;一只股票在多个交易所上市，在回测时要留意你用到的是哪个交易所的数据。如果使用consolidated prices做回测，很容易搞不清楚实际交易时到底应该用哪个交易所的价格。&lt;/p&gt;

&lt;p&gt;Bar data某程度上就是一种consolidated data，使用OHLC数据进行回测时，要留意与真实的price feed的区别。&lt;/p&gt;

&lt;p&gt;Tick data可以通过订阅实时数据，自行进行收录（如果技术上做得到的话）。&lt;/p&gt;

&lt;h3 id=&quot;venue-dependence-of-currency-quotes&quot;&gt;Venue Dependence of Currency Quotes&lt;/h3&gt;

&lt;p&gt;外汇市场，不同的venue有不同的报价，如果我们打算在A venue进行交易，那就必须用A venue的历史数据进行回测；如果用B venue的历史数据，那就是一个伪回测，
不具备实际意义。&lt;/p&gt;

&lt;p&gt;如果用quote aggregator做回测的historical data，将来打算交易的venue，一定要在这个aggregator里面，否则也是一个无效的回测。&lt;/p&gt;

&lt;p&gt;外汇市场数据还有一个特点：通常bid/ask quotes数据相对容易获得，但trade price/volume较难获得（因为没有监管要求上报trade数据，大家都会倾向将trade
数据看作是自己的私有财产）&lt;/p&gt;

&lt;h2 id=&quot;short-sale-constraints&quot;&gt;Short-Sale Constraints&lt;/h2&gt;

&lt;p&gt;通常，你的经纪商（broker）未必支持short sale。&lt;/p&gt;

&lt;p&gt;如果short interest足够多，会导致borrow share的成本很高。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“uptick rule”：short sale的价格要比最近成交价更高。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;futures-continuous-contracts&quot;&gt;Futures Continuous Contracts&lt;/h2&gt;

&lt;p&gt;期货需要考虑roll over&lt;/p&gt;

&lt;h2 id=&quot;futures-close-versus-settlement-prices&quot;&gt;Futures Close versus Settlement Prices&lt;/h2&gt;

&lt;p&gt;Settlement prices由exchange提供，即使当天没有交易，也会有一个settlement prices。用actural transaction prices去做回测比较好，如果用
settlement prices，要小心。&lt;/p&gt;

&lt;h2 id=&quot;statistical-significance-of-backtesting-hypothesis-testing&quot;&gt;Statistical Significance of Backtesting: Hypothesis Testing&lt;/h2&gt;

&lt;h2 id=&quot;choosing-a-backtesting-and-automated-execution-platform&quot;&gt;Choosing a Backtesting and Automated Execution Platform&lt;/h2&gt;

&lt;p&gt;买一个系统还是自己build一个系统？&lt;/p&gt;

&lt;h2 id=&quot;can-backtesting-and-execution-use-the-same-program&quot;&gt;Can Backtesting and Execution Use the Same Program?&lt;/h2&gt;

&lt;p&gt;应该要一致：&lt;/p&gt;

&lt;p&gt;（1）方便将backtest strategy 迁移至实盘live trading（尽可能少的改动代码）&lt;/p&gt;

&lt;p&gt;（2）避免look-ahead bias&lt;/p&gt;

&lt;h2 id=&quot;what-type-of-asset-classes-or-strategies-does-the-platform-support&quot;&gt;What Type of Asset Classes or Strategies Does the Platform Support?&lt;/h2&gt;

&lt;p&gt;市面上已有的平台，通常只能trade一种或几种资产。&lt;strong&gt;自己写会有足够的灵活性&lt;/strong&gt; （例如&lt;a href=&quot;https://github.com/josephchenhk/qtrader&quot;&gt;Qtrader&lt;/a&gt;）。&lt;/p&gt;

&lt;h2 id=&quot;does-the-platform-have-complex-event-processing&quot;&gt;Does the Platform Have Complex Event Processing?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;For an algorithmic trader, one important point is that the program is event driven, and not bar driven.That is, the program does not go poll prices or news items at the end of each bar and then decide what to do. Because CEP is event driven, there is no delay between the occurrence of an event and the response to it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jospeh：这未必是一条金科玉律。很多中低频的systematic trading strategies其实也是由bar驱动的。&lt;/p&gt;</content><author><name>joseph</name></author><category term="blog" /><category term="算法交易" /><category term="qtrader" /><summary type="html">A brief note of Ernest Chan’s book.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/markdown.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">在CentOS安装docker</title><link href="http://localhost:4000/centos-install-docker/" rel="alternate" type="text/html" title="在CentOS安装docker" /><published>2021-02-04T22:48:00+08:00</published><updated>2021-02-04T22:48:00+08:00</updated><id>http://localhost:4000/centos-install-docker</id><content type="html" xml:base="http://localhost:4000/centos-install-docker/">&lt;h1 id=&quot;centos7安装docker详细步骤&quot;&gt;centos7安装Docker详细步骤&lt;/h1&gt;

&lt;p&gt;centos7安装Docker全过程记录（无坑版教程）：&lt;/p&gt;

&lt;h2 id=&quot;一安装前必读&quot;&gt;一、安装前必读&lt;/h2&gt;
&lt;p&gt;在安装 Docker 之前，先说一下配置，我这里是Centos7
 Linux 内核：官方建议 3.10 以上，3.8以上貌似也可。&lt;/p&gt;

&lt;p&gt;注意：本文的命令使用的是 root 用户登录执行，不是 root 的话所有命令前面要加 sudo&lt;/p&gt;

&lt;h3 id=&quot;1查看当前的内核版本&quot;&gt;1.查看当前的内核版本&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2使用-root-权限更新-yum-包生产环境中此步操作需慎重看自己情况学习的话随便搞&quot;&gt;2.使用 root 权限更新 yum 包（生产环境中此步操作需慎重，看自己情况，学习的话随便搞）&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;注意​ 
yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; update：升级所有包同时也升级软件和系统内核；​ 
yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; upgrade：只升级所有包，不升级软件和系统内核&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;3卸载旧版本如果之前安装过的话&quot;&gt;3.卸载旧版本（如果之前安装过的话）&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;yum remove docker  docker-common docker-selinux docker-engine&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;二安装docker的详细步骤&quot;&gt;二、安装Docker的详细步骤&lt;/h2&gt;

&lt;h3 id=&quot;1安装需要的软件包-yum-util-提供yum-config-manager功能另两个是devicemapper驱动依赖&quot;&gt;1.安装需要的软件包， yum-util 提供yum-config-manager功能，另两个是devicemapper驱动依赖&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; yum-utils device-mapper-persistent-data lvm2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2设置-yum-源&quot;&gt;2.设置 yum 源&lt;/h3&gt;

&lt;p&gt;设置一个yum源，下面两个都可用&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;yum-config-manager &lt;span class=&quot;nt&quot;&gt;--add-repo&lt;/span&gt; http://download.docker.com/linux/centos/docker-ce.repo（中央仓库）

yum-config-manager &lt;span class=&quot;nt&quot;&gt;--add-repo&lt;/span&gt; http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo（阿里仓库）&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;3选择docker版本并安装&quot;&gt;3.选择docker版本并安装&lt;/h3&gt;

&lt;p&gt;####（1）查看可用版本有哪些&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;yum list docker-ce &lt;span class=&quot;nt&quot;&gt;--showduplicates&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####（2）选择一个版本并安装：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yum install docker-ce-版本号&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;docker-ce-20.10.2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;4启动-docker-并设置开机自启&quot;&gt;4.启动 Docker 并设置开机自启&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;systemctl start docker
systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;docker&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;ref&quot;&gt;Ref&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/article/1701451&quot;&gt;centos7安装Docker详细步骤（无坑版教程）&lt;/a&gt;&lt;/p&gt;</content><author><name>joseph</name></author><category term="blog" /><category term="docker" /><category term="centos" /><summary type="html">centos7安装Docker详细步骤</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/markdown.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Jira服务器搭建</title><link href="http://localhost:4000/jira-server/" rel="alternate" type="text/html" title="Jira服务器搭建" /><published>2020-07-22T15:41:00+08:00</published><updated>2020-07-22T15:41:00+08:00</updated><id>http://localhost:4000/jira-server</id><content type="html" xml:base="http://localhost:4000/jira-server/">&lt;h1 id=&quot;安装jdk&quot;&gt;安装jdk&lt;/h1&gt;

&lt;p&gt;去官网下载jdk-8u261-linux-x64.rpm&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum localinstall jdk-8u261-linux-x64.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;装之前，如果系统已经有open-jdk，需要先卸装&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rpm &lt;span class=&quot;nt&quot;&gt;-qa&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;java
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rpm &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--nodeps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;查看到的open-jdk] &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;安装mysql&quot;&gt;安装mysql&lt;/h1&gt;

&lt;p&gt;先检查系统是否有安装mysql&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rpm &lt;span class=&quot;nt&quot;&gt;-qa&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;mysql&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;下载mysql的repo源&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;安装mysql-community-release-el7-5.noarch.rpm包：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rpm &lt;span class=&quot;nt&quot;&gt;-ivh&lt;/span&gt; mysql-community-release-el7-5.noarch.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;安装完这个包之后，会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo, /etc/yum.repos.d/mysql-community-source.repo&lt;/p&gt;

&lt;p&gt;我们便可以运行下面命令去安装mysql&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mysql-server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;安装完成后，再次查看mysql&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rpm &lt;span class=&quot;nt&quot;&gt;-qa&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;mysql
mysql-community-libs-5.6.49-2.el7.x86_64
mysql-community-release-el7-5.noarch
mysql-community-common-5.6.49-2.el7.x86_64
mysql-community-client-5.6.49-2.el7.x86_64
mysql-community-server-5.6.49-2.el7.x86_64&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;启动mysqld&quot;&gt;启动mysqld&lt;/h1&gt;

&lt;p&gt;在进行mysql配置之前，先要启动mysql server：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shelll&quot; data-lang=&quot;shelll&quot;&gt;$ service mysqld start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;设置mysql&quot;&gt;设置mysql&lt;/h1&gt;

&lt;p&gt;首先要重置密码&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root
ERROR 2002 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HY000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Can&lt;span class=&quot;s1&quot;&gt;'t connect to local MySQL server through socket '&lt;/span&gt;/var/lib/mysql/mysql.sock&lt;span class=&quot;s1&quot;&gt;' (2)

# 这个错误原因是/var/lib/mysql的访问权限问题，将/var/lib/mysql的拥有者改为mysql:mysql
$ ls -l /var/lib/mysql
drwxr-xr-x. 2 mysql mysql 6 Jun 2 02:13 mysql
drwxr-x---. 2 mysql mysql 6 Jun 2 02:13 mysql-files

# 修改子目录的用户组
$ chown mysql:mysql /var/lib/mysql -R

# 再试一次登陆mysql
$ mysql -u root&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;成功以root用户进入mysql&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 创建jira数据库&lt;/span&gt;
mysql&amp;gt; CREATE DATABASE jira CHARACTER SET utf8 COLLATE utf8_bin&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 1 row affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 授予jira用户权限&lt;/span&gt;
mysql&amp;gt; GRANT ALL PRIVILEGES ON jira.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; TO &lt;span class=&quot;s1&quot;&gt;'jira'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt; IDENTIFIED BY &lt;span class=&quot;s1&quot;&gt;'jirapass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 0 rows affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 测试jira连接mysql&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-ujira&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pjirapass&lt;/span&gt;
mysql&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;安装jira&quot;&gt;安装jira&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-7.4.1-x64.bin

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ll atlassian-jira-software-7.4.1-x64.bin
&lt;span class=&quot;nt&quot;&gt;-rw-rw-r--&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;a+x atlassian-jira-software-7.4.1-x64.bin
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./atlassian-jira-software-7.4.1-x64.bin &lt;span class=&quot;c&quot;&gt;# 记得要用sudo&lt;/span&gt;
Installation Directory: /opt/atlassian/jira
Home directory: /var/atlassian/application-data/jira
HTTP Port: 8080
RMI Port:8005&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;先关闭jira，将pojie文件atlassian-extras-3.2.jar 和 mysql-connector-java-5.1.39-bin.jar 两个文件复制至 /opt/atlassian/jira/atlassian-jira/WEB-INF/lib/目录下&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/etc/init.d/jira stop
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;lsof &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;:8080
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;atlassian-extras-3.2.jar /opt/atlassian/jira/atlassian-jira/WEB-INF/lib/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;mysql-connector-java-5.1.39-bin.jar /opt/atlassian/jira/atlassian-jira/WEB-INF/lib/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/etc/init.d/jira start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;装好后如果在非本地机，通过ip:8080访问打不开，可能是由于防火墙的缘故，作如下处理&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--zone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;public &lt;span class=&quot;nt&quot;&gt;--add-port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8080/tcp &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;service firewalld stop
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;service firewalld start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;打开浏览器，输入ip:8080访问jira配置页面，按步骤操作如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images_in_posts/jira1.png&quot; alt=&quot;Markdown Image&quot; /&gt;
&lt;img src=&quot;/assets/images_in_posts/jira2.png&quot; alt=&quot;Markdown Image&quot; /&gt;
&lt;img src=&quot;/assets/images_in_posts/jira3.png&quot; alt=&quot;Markdown Image&quot; /&gt;
&lt;img src=&quot;/assets/images_in_posts/jira4.png&quot; alt=&quot;Markdown Image&quot; /&gt;
&lt;img src=&quot;/assets/images_in_posts/jira5.png&quot; alt=&quot;Markdown Image&quot; /&gt;
&lt;img src=&quot;/assets/images_in_posts/jira6.png&quot; alt=&quot;Markdown Image&quot; /&gt;
&lt;img src=&quot;/assets/images_in_posts/jira7.png&quot; alt=&quot;Markdown Image&quot; /&gt;
&lt;img src=&quot;/assets/images_in_posts/jira8.png&quot; alt=&quot;Markdown Image&quot; /&gt;
&lt;img src=&quot;/assets/images_in_posts/jira9.png&quot; alt=&quot;Markdown Image&quot; /&gt;
&lt;img src=&quot;/assets/images_in_posts/jira10.png&quot; alt=&quot;Markdown Image&quot; /&gt;&lt;/p&gt;</content><author><name>joseph</name></author><category term="blog" /><category term="Jira" /><category term="server" /><summary type="html">安装jdk</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/markdown.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">GitLab服务器搭建</title><link href="http://localhost:4000/gitlab-server/" rel="alternate" type="text/html" title="GitLab服务器搭建" /><published>2020-07-21T12:41:00+08:00</published><updated>2020-07-21T12:41:00+08:00</updated><id>http://localhost:4000/gitlab-server</id><content type="html" xml:base="http://localhost:4000/gitlab-server/">&lt;p&gt;我们上一篇介绍了搭建Git服务器。要使用一个更现代、功能更全的Git服务器，我们可以试试GitLab&lt;/p&gt;
&lt;h1 id=&quot;准备工作&quot;&gt;准备工作&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;安装基础依赖&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 安装技术依赖&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; curl policycoreutils-python openssh-server

&lt;span class=&quot;c&quot;&gt;# 启动ssh服务 &amp;amp; 设置为开机启动&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl enabale sshd
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl start sshd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;安装Postfix&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Postfix是一个邮件服务器，GitLab发送邮件需要用到&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 安装postfix&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; postfix

&lt;span class=&quot;c&quot;&gt;# 启动postfix并设置为开机启动&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;postfix
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl start postfix&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;开放ssh以及http服务（80端口）&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 开放ssh、http服务&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 重载防火墙规则&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--reload&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;部署过程&quot;&gt;部署过程&lt;/h1&gt;

&lt;p&gt;我们这里部署社区版gitlab-ce，如果要部署商业版可以把关键字替换成gitlab-ee&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;yum安装gitlab&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;bash 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; gitlab-ce&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;配置GitLab站点Url&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;将external_url修改为ip地址或域名：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 修改配置文件&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /etc/gitlab/gitlab.rb

&lt;span class=&quot;c&quot;&gt;# 配置首页地址 (注意有个等号=)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;external_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'10.10.10.82'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;启动并访问GitLab&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 重新配置并启动&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gitlab-ctl reconfigure

&lt;span class=&quot;c&quot;&gt;# 完成后将会看到如下输出&lt;/span&gt;
Running handlers &lt;span class=&quot;nb&quot;&gt;complete
&lt;/span&gt;Chef Client finished, 556/1522 resources updated &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;05 minutes 34 seconds
gitlab Reconfigured!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;直接在浏览器输入ip地址”10.10.10.82”，可以访问gitlab。也可以通过修改本地host将域名指向服务器ip：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /etc/hosts

10.10.10.82 www.algo-git.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以上修改后，重启network&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl restart network

&lt;span class=&quot;c&quot;&gt;# 或者通过nscd清除dns缓存&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nscd
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl status nscd
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl start nscd

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nscd &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; hosts&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;注意：以上修改/etc/hosts 只能对修改的本机生效。如果要对所有机器生效，还是要老老实实地去注册一个域名，然后通过dns解析吧。&lt;/p&gt;</content><author><name>joseph</name></author><category term="blog" /><category term="GitLab" /><category term="server" /><summary type="html">我们上一篇介绍了搭建Git服务器。要使用一个更现代、功能更全的Git服务器，我们可以试试GitLab 准备工作</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/markdown.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Git服务器搭建</title><link href="http://localhost:4000/git-server/" rel="alternate" type="text/html" title="Git服务器搭建" /><published>2020-07-21T09:41:00+08:00</published><updated>2020-07-21T09:41:00+08:00</updated><id>http://localhost:4000/git-server</id><content type="html" xml:base="http://localhost:4000/git-server/">&lt;h1 id=&quot;安装git&quot;&gt;安装Git&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;接下来我们创建一个git用户组和git用户，用来运行git服务&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;groupadd git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;useradd git &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;创建证书登陆&quot;&gt;创建证书登陆&lt;/h1&gt;

&lt;p&gt;收集需要登陆的用户的公钥，公钥位于id_rsa.pub文件中，把我们的公钥导入到/home/git/.ssh/authorized_keys文件里，一行一个。如果没有该文件就创建一个：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/git/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; .ssh
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;755 .ssh
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; .ssh/authorized_keys
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chomod 644 .ssh/authorized_keys&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;初始化git仓库&quot;&gt;初始化Git仓库&lt;/h1&gt;

&lt;p&gt;首先我们选定一个目录作为Git仓库，假定是/home/git/gitrepo/algo.git，在/home/git/gitrepo目录下输入命令&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/git/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;gitrepo
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chown &lt;/span&gt;git:git gitrepo/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;gitrepo

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init &lt;span class=&quot;nt&quot;&gt;--bare&lt;/span&gt; algo.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以上命令创建了一个空仓库，服务器上的仓库通常以.git结尾。然后，把仓库所属用户改为git：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; git:git algo.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;克隆仓库&quot;&gt;克隆仓库&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git@192.168.2.24:/home/git/gitrepo/algo.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;192.168.2.24为Git所在服务器ip，需要将其改为你自己的服务器ip。这样我们的Git服务器就安装完成了。&lt;/p&gt;</content><author><name>joseph</name></author><category term="blog" /><category term="Git" /><category term="server" /><summary type="html">安装Git</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/markdown.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">远程连接至局域网</title><link href="http://localhost:4000/remote-access-to-local-network/" rel="alternate" type="text/html" title="远程连接至局域网" /><published>2020-07-20T19:23:00+08:00</published><updated>2020-07-20T19:23:00+08:00</updated><id>http://localhost:4000/remote-access-to-local-network</id><content type="html" xml:base="http://localhost:4000/remote-access-to-local-network/">&lt;h2 id=&quot;安装vmware-workstation&quot;&gt;安装Vmware Workstation&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;下载：&lt;a href=&quot;https://www.macxin.com/archives/3156.html&quot;&gt;WMware Workstation Pro 14.1.0 Linux 完美破解版 多语言版&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;注册码：(适合VMware 2017 v14.x) FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA / CV7T2-6WY5Q-48EWP-ZXY7X-QGUWD&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上传至服务器之后，解压，得到&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;o+x VMware-Workstation-Full-14.1.0-7370693.x86_64.bundle
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./WMware-Workstation-Full-14.1.0-7370693.x86_64.bundle
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;填上上面的注册码&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 安装好后打开，会提示安装gcc&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;gcc
&lt;span class=&quot;c&quot;&gt;# 装好gcc之后再次尝试打开，会提示Kernel Headers 3.10.0-1127.13.el7.x86_64 not found，查看现有kernels headers，如果没有的话安装&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /usr/src/kernels/
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;kernel-devel
&lt;span class=&quot;c&quot;&gt;# 装好kernel-devel之后再次尝试打开，会提示还有several packages need to compile，点击install，安装之后会提示失败，不要管它，点击cancel，之后再次打开，就ok了&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;下载CentOS-7-x86_64-Minimal-2003.iso并上传至服务器，打开vmware workstation，安装镜像。当安装完成之后，会提示说”Could not open /dev/vmmon: No such file or direcotry. Please make sure that the kernel module &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vmmon&lt;/code&gt; is loaded.”&lt;/p&gt;

&lt;p&gt;这个错误大概是说vmmonitor和vmnet这两个模块没有经过签名认证，所以vmware出于安全的考虑，无法built。解决方案之一是重启系统，进入bios修改secure boot，将之改为disable，再重新尝试即可。&lt;/p&gt;</content><author><name>joseph</name></author><category term="blog" /><category term="markdown" /><category term="elements" /><summary type="html">安装Vmware Workstation 下载：WMware Workstation Pro 14.1.0 Linux 完美破解版 多语言版 注册码：(适合VMware 2017 v14.x) FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA / CV7T2-6WY5Q-48EWP-ZXY7X-QGUWD</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/markdown.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>